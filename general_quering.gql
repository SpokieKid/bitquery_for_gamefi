# MBOX address: 0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377
# MOMO address: 0x4eededfe89dad70ab8cbf70e4dd140ff8e6e8ce5

# Query for all the Specific Token a user have

# How many transactions a player have made to buy MBOX or MOMO

query MyQuery {
  ethereum(network: bsc) {
    transactions(
      txSender: {is: "REPLACE this with player address"}
      txTo: {is: "REPLACE this with token address"}
    ) {
      count(success: true)
    }
  }
}


# How many MBOX or MOMO a player have bought/sold
# if: sender = MOBOX Wallet & receiver = player address => BUY
# Vice Versa => SELL

query MyQuery {
  ethereum(network: bsc) {
    transfers(
      sender: {is: "REPLACE THIS WITH PLAYER ADDRESS"} 
      receiver: {is: "0x5e206d03a2bf166f6faabc0eed3c76a9609f62df"} # Do not replace this (MOBOX Wallet)
    ) {
      amount(currency: {is: "0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377"}) # MBOX Address
    }
  }
}


# How many specific token a player have right now

query MyQuery {
  ethereum(network: bsc) {
    address(address: {is: "REPLACE this with player address"}) {
      balances(currency: {is: "0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377"}) { # MBOX address
        value
      }
    }
  }
}

# Query for how much USD a player has spent on buying the game token

{
  ethereum(network: bsc) {
    dexTrades(
      options: {desc: "tradeAmount"}
      date: {after: "2022-02-10"} # Specify the date
    ) {
      transaction(txSender: {is: "0xa4b1345a4640ab63f1c3b4c606d305f03328fa10"}) { # Specify the player
        hash
      }
      tradeIndex
      date {
        date
      }
      sellAmount # How much the user have bought
      sellCurrency(sellCurrency: {is: "0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377"}) { # The Token address, taken MBOX for example
        symbol
      }
      sellAmountInUsd: sellAmount(in: USD)
      tradeAmount(in: USD) # Total amount of Crypto token used to buy the Game token. Sample result: x BUSD
      # Be aware that tradeAmount may not be the same to the one on BSCSCAN, error span +- $10
    }
  }
}


# If you want to check the code for selling, and stuggles to find a player's transaction,
# you can use the player addresses from below:
# MBOX: 0xa4b1345a4640ab63f1c3b4c606d305f03328fa10
# Alien Worlds: 0x9a136a6649fbbc2a4f5e67245bde2b7dde260bcc
# Bomb Crypto: 0x335528a6c6758fa33a7f855b179ef79440c91e55
# META: 0xa457ea038728b1f7ea299ed31494fb2a4616d0c9